(function(){"use strict";let r;function g(){return new Promise((e,t)=>{const n=indexedDB.open("racelog");n.onupgradeneeded=o=>{o.target.result.createObjectStore("racedays",{keyPath:"id",autoIncrement:!1}).createIndex("date","date",{unique:!1})},n.onsuccess=o=>{r=o.target.result,e(r)}})}function d(e="readonly"){return r.transaction(["racedays"],e)}function i(e,t="readonly"){return e=e||d(t),e.objectStore("racedays")}function h(e,t){let n=t;return()=>{--n<=0&&e()}}function u(e){let t;return e=e||"01/01/1901",t=e.split("/"),(!t||t.length<3)&&(t=["01","01","1901"]),new Date(t[2],t[1]-1,t[0])}(async function(){const n=await(await fetch("/cba-racelog/data/racelog.json")).json();await g(),i(void 0,"readwrite").clear().onsuccess=o=>{const l=d("readwrite"),a=h(function(){postMessage("done")},n.length);n.forEach((c,j)=>{c.date=u(c.date),c.races.forEach(s=>{s.forEach(b=>{b.date=u(b.date)})});const f=i(l).add({id:j,...c});f.onsuccess=s=>a(),f.onerror=s=>a()})}})()})();
